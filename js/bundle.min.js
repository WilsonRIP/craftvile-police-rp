class AuthManager{constructor(){this.currentUser=null;this.init()}async init(){this.checkSession();this.initEventListeners();this.checkSteamCallback()}initEventListeners(){document.addEventListener("click",e=>{if(e.target.classList.contains("login-btn")){this.initiateSteamLogin()}else if(e.target.classList.contains("logout-btn")){this.logout()}})}checkSession(){const sessionData=localStorage.getItem("userSession");if(sessionData){try{this.currentUser=JSON.parse(sessionData);this.updateUI();window.dispatchEvent(new CustomEvent("auth:login",{detail:this.currentUser}))}catch(error){console.error("Error parsing session data:",error);this.logout()}}}initiateSteamLogin(){const steamOpenIDUrl="https://steamcommunity.com/openid/login";const returnUrl=`${window.location.origin}/auth/steam/callback`;const params=new URLSearchParams({"openid.ns":"http://specs.openid.net/auth/2.0","openid.mode":"checkid_setup","openid.return_to":returnUrl,"openid.realm":window.location.origin,"openid.identity":"http://specs.openid.net/auth/2.0/identifier_select","openid.claimed_id":"http://specs.openid.net/auth/2.0/identifier_select"});window.location.href=`${steamOpenIDUrl}?${params.toString()}`}async checkSteamCallback(){const urlParams=new URLSearchParams(window.location.search);const steamId=urlParams.get("openid.claimed_id");if(steamId){try{const steamId64=steamId.split("/").pop();await this.handleSteamLogin(steamId64);window.history.replaceState({},document.title,window.location.pathname)}catch(error){console.error("Error processing Steam login:",error);this.showError("Failed to complete Steam login. Please try again.")}}}async handleSteamLogin(steamId){try{const userData={id:steamId,name:"Steam User",role:"Member",avatar:"https://avatars.steamstatic.com/fef49e7fa7e1997310d705b2a6158ff8dc1cdfeb_full.jpg",steamId:steamId,permissions:["create_posts","create_comments"]};this.setCurrentUser(userData);this.updateUI();window.dispatchEvent(new CustomEvent("auth:login",{detail:userData}))}catch(error){console.error("Error handling Steam login:",error);this.showError("Failed to complete login. Please try again.")}}setCurrentUser(userData){this.currentUser=userData;localStorage.setItem("userSession",JSON.stringify(userData))}logout(){this.currentUser=null;localStorage.removeItem("userSession");this.updateUI();window.dispatchEvent(new CustomEvent("auth:logout"));if(window.location.pathname!=="/"){window.location.href="/"}}updateUI(){const authStatus=document.querySelector(".auth-status");if(!authStatus)return;if(this.currentUser){authStatus.innerHTML=`
                <span class="user-info">
                    <img src="${this.currentUser.avatar}" alt="" class="user-avatar">
                    <span class="user-name">${this.currentUser.name}</span>
                    <span class="user-role">${this.currentUser.role}</span>
                </span>
                <button class="logout-btn">Logout</button>
            `}else{authStatus.innerHTML=`
                <button class="login-btn">
                    <img src="assets/steam-icon.png" alt="Steam icon">
                    Login with Steam
                </button>
            `}}hasPermission(permission){return this.currentUser?.permissions?.includes(permission)||false}showError(message){console.error(message);alert(message)}async fetchSteamProfile(steamId){try{const response=await fetch(`/api/steam/profile/${steamId}`);if(!response.ok)throw new Error("Failed to fetch Steam profile");return await response.json()}catch(error){console.error("Error fetching Steam profile:",error);throw error}}}const authManager=new AuthManager;window.authManager=authManager;class ForumManager{constructor(){this.posts=[];this.currentUser=null;this.init()}async init(){this.initEventListeners();await this.loadPosts();this.updateForumStats();this.checkAuthStatus()}initEventListeners(){const newPostBtn=document.getElementById("newPostBtn");if(newPostBtn){newPostBtn.addEventListener("click",()=>this.showNewPostModal())}const newPostForm=document.getElementById("newPostForm");if(newPostForm){newPostForm.addEventListener("submit",e=>this.handleNewPost(e))}const closeModal=document.querySelector(".close-modal");if(closeModal){closeModal.addEventListener("click",()=>this.hideNewPostModal())}const searchInput=document.getElementById("searchInput");if(searchInput){searchInput.addEventListener("input",e=>this.handleSearch(e.target.value))}}async loadPosts(){try{this.posts=[{id:1,title:"Welcome to CraftVile Police RP",content:"Welcome to our community! Please read the rules and guidelines.",author:{name:"Admin",role:"Administrator",avatar:"path/to/avatar.jpg"},date:new Date,category:"announcements",pinned:true,reactions:{"👍":["user1","user2"],"❤️":["user3"],"😄":[]},comments:[],views:0}];this.renderPosts()}catch(error){console.error("Error loading posts:",error);this.showError("Failed to load posts. Please try again later.")}}renderPosts(){const postsContainer=document.getElementById("forumPosts");const template=document.getElementById("postTemplate");if(!postsContainer||!template)return;postsContainer.innerHTML="";const sortedPosts=[...this.posts].sort((a,b)=>{if(a.pinned&&!b.pinned)return-1;if(!a.pinned&&b.pinned)return 1;return new Date(b.date)-new Date(a.date)});sortedPosts.forEach(post=>{const postElement=template.content.cloneNode(true);postElement.querySelector(".post-title").textContent=post.title;postElement.querySelector(".post-text").textContent=post.content;postElement.querySelector(".author-name").textContent=post.author.name;postElement.querySelector(".author-role").textContent=post.author.role;postElement.querySelector(".author-avatar").src=post.author.avatar;postElement.querySelector(".post-date").textContent=this.formatDate(post.date);const reactionsContainer=postElement.querySelector(".reactions");Object.entries(post.reactions).forEach(([emoji,users])=>{const reactionBtn=reactionsContainer.querySelector(`[data-emoji="${emoji}"]`);if(reactionBtn){reactionBtn.querySelector(".count").textContent=users.length;if(this.currentUser&&users.includes(this.currentUser.id)){reactionBtn.classList.add("active")}}});postElement.querySelector(".views .count").textContent=post.views;postElement.querySelector(".comments .count").textContent=post.comments.length;this.addPostEventListeners(postElement,post);postsContainer.appendChild(postElement)})}addPostEventListeners(postElement,post){postElement.querySelectorAll(".reaction-btn").forEach(btn=>{btn.addEventListener("click",()=>this.handleReaction(post.id,btn.dataset.emoji))});const addReactionBtn=postElement.querySelector(".add-reaction");if(addReactionBtn){addReactionBtn.addEventListener("click",()=>this.showEmojiPicker(post.id))}const commentForm=postElement.querySelector(".comment-form");if(commentForm){commentForm.addEventListener("submit",e=>this.handleNewComment(e,post.id))}if(this.currentUser&&this.hasPermission(this.currentUser,"manage_posts")){const editBtn=postElement.querySelector(".edit-post");const deleteBtn=postElement.querySelector(".delete-post");const pinBtn=postElement.querySelector(".pin-post");if(editBtn)editBtn.addEventListener("click",()=>this.editPost(post.id));if(deleteBtn)deleteBtn.addEventListener("click",()=>this.deletePost(post.id));if(pinBtn){pinBtn.addEventListener("click",()=>this.togglePinPost(post.id));if(post.pinned)pinBtn.classList.add("active")}}}async handleNewPost(event){event.preventDefault();if(!this.currentUser){this.showError("Please log in to create a post");return}const form=event.target;const title=form.title.value.trim();const content=form.content.value.trim();const category=form.category.value;if(!title||!content||!category){this.showError("Please fill in all fields");return}try{const newPost={id:this.posts.length+1,title:title,content:content,category:category,author:{name:this.currentUser.name,role:this.currentUser.role,avatar:this.currentUser.avatar},date:new Date,pinned:false,reactions:{"👍":[],"❤️":[],"😄":[]},comments:[],views:0};this.posts.unshift(newPost);this.renderPosts();this.hideNewPostModal();form.reset()}catch(error){console.error("Error creating post:",error);this.showError("Failed to create post. Please try again.")}}async handleReaction(postId,emoji){if(!this.currentUser){this.showError("Please log in to react to posts");return}try{const post=this.posts.find(p=>p.id===postId);if(!post)return;const users=post.reactions[emoji]||[];const userIndex=users.indexOf(this.currentUser.id);if(userIndex===-1){users.push(this.currentUser.id)}else{users.splice(userIndex,1)}post.reactions[emoji]=users;this.renderPosts()}catch(error){console.error("Error handling reaction:",error);this.showError("Failed to update reaction. Please try again.")}}async handleNewComment(event,postId){event.preventDefault();if(!this.currentUser){this.showError("Please log in to comment");return}const form=event.target;const content=form.querySelector("input").value.trim();if(!content)return;try{const post=this.posts.find(p=>p.id===postId);if(!post)return;const newComment={id:post.comments.length+1,content:content,author:{name:this.currentUser.name,role:this.currentUser.role,avatar:this.currentUser.avatar},date:new Date};post.comments.push(newComment);this.renderPosts();form.reset()}catch(error){console.error("Error creating comment:",error);this.showError("Failed to post comment. Please try again.")}}hasPermission(user,permission){return user&&(user.role==="Administrator"||user.role==="Moderator")}showNewPostModal(){const modal=document.getElementById("newPostModal");if(modal)modal.style.display="block"}hideNewPostModal(){const modal=document.getElementById("newPostModal");if(modal)modal.style.display="none"}updateForumStats(){const memberCount=document.getElementById("memberCount");const postCount=document.getElementById("postCount");if(memberCount)memberCount.textContent="0 Members";if(postCount)postCount.textContent=`${this.posts.length} Posts`}handleSearch(query){if(!query){this.renderPosts();return}const filteredPosts=this.posts.filter(post=>post.title.toLowerCase().includes(query.toLowerCase())||post.content.toLowerCase().includes(query.toLowerCase()));this.renderPosts(filteredPosts)}formatDate(date){return new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"}).format(new Date(date))}showError(message){console.error(message);alert(message)}checkAuthStatus(){const authStatus=document.querySelector(".auth-status");if(!authStatus)return;if(this.currentUser){authStatus.innerHTML=`
                <span class="user-info">
                    <img src="${this.currentUser.avatar}" alt="" class="user-avatar">
                    <span class="user-name">${this.currentUser.name}</span>
                </span>
                <button class="logout-btn">Logout</button>
            `}else{authStatus.innerHTML=`
                <button class="login-btn">Login with Steam</button>
            `}}}const forumManager=new ForumManager;"use strict";const themeToggle=document.getElementById("themeToggle");const prefersDarkScheme=window.matchMedia("(prefers-color-scheme: dark)");function setInitialTheme(){const savedTheme=localStorage.getItem("theme");if(savedTheme){document.documentElement.setAttribute("data-theme",savedTheme)}else if(prefersDarkScheme.matches){document.documentElement.setAttribute("data-theme","dark")}}setInitialTheme();document.addEventListener("DOMContentLoaded",()=>{const themeToggle=document.getElementById("themeToggle");const prefersDarkScheme=window.matchMedia("(prefers-color-scheme: dark)");document.documentElement.dataset.theme=prefersDarkScheme.matches?"dark":"light";themeToggle.addEventListener("click",()=>{const currentTheme=document.documentElement.dataset.theme;document.documentElement.dataset.theme=currentTheme==="dark"?"light":"dark"});const navToggle=document.getElementById("navToggle");const navLinks=document.querySelector(".nav-links");navToggle?.addEventListener("click",()=>{navLinks.classList.toggle("active")})});document.addEventListener("click",e=>{if(!navToggle.contains(e.target)&&!navLinks.contains(e.target)){navLinks.classList.remove("active")}});function debounce(func,wait){let timeout;return function executedFunction(...args){const later=()=>{clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout=setTimeout(later,wait)}}const observerOptions={root:null,rootMargin:"0px",threshold:.1};const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add("visible");observer.unobserve(entry.target)}})},observerOptions);document.querySelectorAll(".feature-card, .update-card, .stat-card").forEach(card=>{observer.observe(card)});const staffApplication=document.getElementById("staffApplication");if(staffApplication){staffApplication.addEventListener("submit",async e=>{e.preventDefault();if(validateForm(staffApplication)){const formData=new FormData(staffApplication);const application=Object.fromEntries(formData.entries());const applications=JSON.parse(localStorage.getItem("applications")||"[]");application.id=Date.now();application.status="pending";application.date=(new Date).toISOString();applications.push(application);localStorage.setItem("applications",JSON.stringify(applications));staffApplication.reset();alert("Application submitted successfully!");updateApplicationsList()}})}function validateForm(form){const inputs=form.querySelectorAll("input, textarea, select");let isValid=true;inputs.forEach(input=>{if(input.hasAttribute("required")&&!input.value.trim()){isValid=false;showError(input,"This field is required")}else{clearError(input)}if(input.type==="email"&&input.value){const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(input.value)){isValid=false;showError(input,"Please enter a valid email address")}}});return isValid}function showError(input,message){const errorDiv=input.nextElementSibling?.classList.contains("error-message")?input.nextElementSibling:document.createElement("div");if(!input.nextElementSibling?.classList.contains("error-message")){errorDiv.classList.add("error-message");input.parentNode.insertBefore(errorDiv,input.nextSibling)}errorDiv.textContent=message;input.classList.add("error")}function clearError(input){const errorDiv=input.nextElementSibling;if(errorDiv?.classList.contains("error-message")){errorDiv.remove()}input.classList.remove("error")}const updateFilters=document.querySelectorAll(".filter-btn");if(updateFilters.length>0){updateFilters.forEach(filter=>{filter.addEventListener("click",()=>{const category=filter.dataset.filter;updateFilters.forEach(btn=>btn.classList.remove("active"));filter.classList.add("active");const updates=document.querySelectorAll(".update-card");updates.forEach(update=>{if(category==="all"||update.dataset.category===category){update.style.display="block"}else{update.style.display="none"}})})})}function updateApplicationsList(){const applicationsGrid=document.getElementById("applicationsGrid");if(!applicationsGrid)return;const applications=JSON.parse(localStorage.getItem("applications")||"[]");const statusFilter=document.getElementById("statusFilter")?.value||"all";const searchTerm=document.getElementById("searchApplications")?.value.toLowerCase()||"";const filteredApplications=applications.filter(app=>{const matchesStatus=statusFilter==="all"||app.status===statusFilter;const matchesSearch=Object.values(app).some(value=>value.toString().toLowerCase().includes(searchTerm));return matchesStatus&&matchesSearch});applicationsGrid.innerHTML=filteredApplications.map(app=>`
        <div class="application-card" data-id="${app.id}">
            <div class="application-header">
                <h4>${app.position}</h4>
                <span class="status-badge ${app.status}">${app.status}</span>
            </div>
            <div class="application-details">
                <p><strong>Steam ID:</strong> ${app.steamId}</p>
                <p><strong>Discord:</strong> ${app.discordTag}</p>
                <p><strong>Date:</strong> ${new Date(app.date).toLocaleDateString()}</p>
            </div>
            ${app.status==="pending"?`
                <div class="application-actions">
                    <button onclick="updateApplicationStatus(${app.id}, 'approved')" class="approve-btn">Approve</button>
                    <button onclick="updateApplicationStatus(${app.id}, 'denied')" class="deny-btn">Deny</button>
                </div>
            `:""}
        </div>
    `).join("")}const staffDashboard=document.getElementById("staffDashboard");if(staffDashboard){updateApplicationsList();document.getElementById("statusFilter")?.addEventListener("change",updateApplicationsList);document.getElementById("searchApplications")?.addEventListener("input",debounce(updateApplicationsList,300))}window.updateApplicationStatus=function(id,status){const applications=JSON.parse(localStorage.getItem("applications")||"[]");const index=applications.findIndex(app=>app.id===id);if(index!==-1){applications[index].status=status;localStorage.setItem("applications",JSON.stringify(applications));updateApplicationsList()}};document.querySelectorAll('a[href^="#"]').forEach(anchor=>{anchor.addEventListener("click",function(e){e.preventDefault();const target=document.querySelector(this.getAttribute("href"));if(target){target.scrollIntoView({behavior:"smooth",block:"start"})}})});const faqItems=document.querySelectorAll(".faq-item");faqItems.forEach(item=>{const question=item.querySelector(".faq-question");question.addEventListener("click",()=>{const isActive=item.classList.contains("active");faqItems.forEach(otherItem=>{if(otherItem!==item){otherItem.classList.remove("active")}});item.classList.toggle("active");const answer=item.querySelector(".faq-answer");answer.setAttribute("aria-expanded",!isActive)})});faqItems.forEach(item=>{const question=item.querySelector(".faq-question");question.addEventListener("keydown",e=>{if(e.key==="Enter"||e.key===" "){e.preventDefault();question.click()}});question.setAttribute("role","button");question.setAttribute("tabindex","0");const answer=item.querySelector(".faq-answer");answer.setAttribute("aria-expanded","false")});class StoreManager{constructor(){this.init()}init(){this.initEventListeners();this.loadUserSubscription()}initEventListeners(){document.querySelectorAll(".package-btn").forEach(button=>{button.addEventListener("click",e=>this.handleSubscription(e))});document.querySelectorAll(".item-btn").forEach(button=>{button.addEventListener("click",e=>this.handleItemPurchase(e))});document.querySelectorAll(".donation-btn").forEach(button=>{button.addEventListener("click",e=>this.handleDonation(e))});const customDonationInput=document.querySelector(".custom-donation input");if(customDonationInput){customDonationInput.addEventListener("input",e=>{this.validateDonationAmount(e.target)})}}async loadUserSubscription(){try{const response=await fetch("/api/user/subscription",{credentials:"include"});if(response.ok){const data=await response.json();this.updateSubscriptionUI(data.subscription)}}catch(error){console.error("Error loading subscription:",error)}}updateSubscriptionUI(subscription){const packages=document.querySelectorAll(".package-card");packages.forEach(package=>{const packageName=package.querySelector("h3").textContent.toLowerCase();const button=package.querySelector(".package-btn");if(subscription&&subscription.package===packageName){button.textContent="Current Plan";button.disabled=true}})}async handleSubscription(event){const button=event.target;const package=button.closest(".package-card");const packageName=package.querySelector("h3").textContent;const priceElement=package.querySelector(".amount");const price=parseFloat(priceElement.textContent.replace("$",""));try{const response=await fetch("/api/store/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({package:packageName,price:price}),credentials:"include"});if(response.ok){const data=await response.json();window.location.href=data.checkoutUrl}else{this.showError("Failed to process subscription. Please try again.")}}catch(error){console.error("Error processing subscription:",error);this.showError("An error occurred. Please try again later.")}}async handleItemPurchase(event){const button=event.target;const item=button.closest(".item-card");const itemName=item.querySelector("h4").textContent;const priceElement=item.querySelector(".item-price");const price=parseFloat(priceElement.textContent.replace("$",""));try{const response=await fetch("/api/store/purchase",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item:itemName,price:price}),credentials:"include"});if(response.ok){const data=await response.json();window.location.href=data.checkoutUrl}else{this.showError("Failed to process purchase. Please try again.")}}catch(error){console.error("Error processing purchase:",error);this.showError("An error occurred. Please try again later.")}}async handleDonation(event){const button=event.target;let amount;if(button.parentElement.classList.contains("custom-donation")){const input=button.parentElement.querySelector("input");amount=parseFloat(input.value);if(!this.validateDonationAmount(input))return}else{amount=parseFloat(button.textContent.replace("$",""))}try{const response=await fetch("/api/store/donate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({amount:amount}),credentials:"include"});if(response.ok){const data=await response.json();window.location.href=data.checkoutUrl}else{this.showError("Failed to process donation. Please try again.")}}catch(error){console.error("Error processing donation:",error);this.showError("An error occurred. Please try again later.")}}validateDonationAmount(input){const amount=parseFloat(input.value);const min=1;const max=1e3;if(isNaN(amount)||amount<min||amount>max){input.setCustomValidity(`Please enter an amount between $${min} and $${max}`);input.reportValidity();return false}input.setCustomValidity("");return true}showError(message){const errorDiv=document.createElement("div");errorDiv.className="error-message";errorDiv.textContent=message;document.querySelector(".store-container").prepend(errorDiv);setTimeout(()=>{errorDiv.remove()},5e3)}}const storeManager=new StoreManager;const themeToggle=document.querySelector(".theme-toggle");const prefersDarkScheme=window.matchMedia("(prefers-color-scheme: dark)");function initTheme(){const savedTheme=localStorage.getItem("theme");if(savedTheme){document.documentElement.setAttribute("data-theme",savedTheme);updateThemeIcon(savedTheme)}else if(prefersDarkScheme.matches){document.documentElement.setAttribute("data-theme","dark");updateThemeIcon("dark")}}function updateThemeIcon(theme){const icon=themeToggle.querySelector("i");icon.className=theme==="dark"?"fas fa-sun":"fas fa-moon"}themeToggle?.addEventListener("click",()=>{const currentTheme=document.documentElement.getAttribute("data-theme");const newTheme=currentTheme==="dark"?"light":"dark";document.documentElement.setAttribute("data-theme",newTheme);localStorage.setItem("theme",newTheme);updateThemeIcon(newTheme)});const toastContainer=document.createElement("div");toastContainer.className="toast-container";document.body.appendChild(toastContainer);function showToast(message,type="success",duration=3e3){const toast=document.createElement("div");toast.className=`toast toast-${type}`;const icon=document.createElement("i");icon.className=type==="success"?"fas fa-check-circle":"fas fa-exclamation-circle";const text=document.createElement("span");text.textContent=message;toast.appendChild(icon);toast.appendChild(text);toastContainer.appendChild(toast);setTimeout(()=>{toast.style.opacity="0";setTimeout(()=>toast.remove(),300)},duration)}document.querySelectorAll('a[href^="#"]').forEach(anchor=>{anchor.addEventListener("click",function(e){e.preventDefault();const target=document.querySelector(this.getAttribute("href"));if(target){target.scrollIntoView({behavior:"smooth",block:"start"})}})});const animateOnScroll=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add("animate-slide-up");animateOnScroll.unobserve(entry.target)}})},{threshold:.1,rootMargin:"50px"});document.querySelectorAll(".card, .store-item, .post-card").forEach(element=>{animateOnScroll.observe(element)});const mobileMenuBtn=document.querySelector(".mobile-menu-btn");const navLinks=document.querySelector(".nav-links");mobileMenuBtn?.addEventListener("click",()=>{navLinks.classList.toggle("active");mobileMenuBtn.classList.toggle("active")});document.querySelectorAll("form").forEach(form=>{form.addEventListener("submit",e=>{if(!form.checkValidity()){e.preventDefault();Array.from(form.elements).forEach(input=>{if(!input.checkValidity()){input.classList.add("invalid");showInputError(input)}})}})});function showInputError(input){const errorMessage=input.validationMessage;const errorElement=document.createElement("div");errorElement.className="input-error";errorElement.textContent=errorMessage;input.parentNode.appendChild(errorElement);input.addEventListener("input",()=>{errorElement.remove();input.classList.remove("invalid")},{once:true})}function showLoading(element){element.classList.add("loading");element.disabled=true;const originalText=element.textContent;element.textContent="Loading...";return()=>{element.classList.remove("loading");element.disabled=false;element.textContent=originalText}}document.querySelectorAll("img[data-src]").forEach(img=>{const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){img.src=img.dataset.src;observer.unobserve(img)}})});observer.observe(img)});document.addEventListener("DOMContentLoaded",()=>{initTheme();prefersDarkScheme.addListener(initTheme)});